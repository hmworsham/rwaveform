% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decom.apply.R
\name{reprocess_}
\alias{reprocess_}
\title{Apply Waveform Decomposition to N Waveforms}
\usage{
reprocess_(probwfs, re, ge, ge2, rf, gp, th, wd)
}
\arguments{
\item{rawarray}{is a list of the full set of waveform output from the ingest function. Includes return, outgoing, system impulse response and outgoing impulse response arrays, if all available.}

\item{deconarray}{is the set of deconvolved waveform returns}

\item{method}{is the deconvolution function using either Gold or Richardson-Lucy algorithm. method=c("Gold","RL"). Default is method=c("Gold").}

\item{np}{is a threshold value which specifies when small_paras (fewer iterations and repetitions) or large_paras (more iterations and repetitions) should be applied in the deconvolution, given the number of estimated peaks in the waveform. More complex waveforms require more iterations and more repetitions to converge. Default is 2 peaks.}

\item{rescale}{determines whether to rescale the waveform intensity. Returns are rescaled to the minimum waveform intensity to conduct rescaling. Default is TRUE.}
}
\value{
The decomposed return waveform
}
\description{
This function applies an iterative Gaussian decomposition to a set of waveforms of dim (MxN).
}
\examples{
decon <- deconv.apply(wfarrays, cliparrays, method = 'Gold', np=2, rescale = F)

# Check dims of result
dim(decon.dt)

# Count number of weird returns
length(decon.dt[rowSums(decon.dt!=0)])

# Plot some deconvolved returns to check
plot(seq(500), decon[1:500,16], type = 'l')
lines(seq(500), return1[16][[1]], type = 'l')
}
\keyword{Gold,}
\keyword{Richardson-Lucy}
\keyword{deconvolution,}
\keyword{waveform,}
